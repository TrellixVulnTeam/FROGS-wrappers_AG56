<?xml version="1.0"?>
<!--
# Copyright (C) 2015 INRA
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<tool id="FROGS_OTU_filters" name="FROGS OTU Filters" version="3.2">
	<description>Filters OTUs on several criteria.</description>
        <requirements>
                <requirement type="package" version="3.2.0">frogs</requirement>
                <requirement type="package" version="2.9.0">blast</requirement>
        </requirements>
        <stdio> 
                <exit_code range="1:" />
                <exit_code range=":-1" />
        </stdio>

	<command>

		filters.py
			--nb-cpus \${GALAXY_SLOTS:-1} 
			--input-biom $input_biom  
			--input-fasta $input_fasta
			--output-fasta $output_fasta
			--output-biom $output_biom
			--excluded $output_excluded
			--summary $output_summary

			#if $contaminations_filter.contaminations_filter_isApplied == "yes"
				#if $contaminations_filter.contaminantSource.which_contaminantSource == "history"
					##build index on the fly
					--contaminant "${contaminations_filter.contaminantSource.ownContaminantFile}"
				#else
					##use precomputed indexes
					--contaminant "${contaminations_filter.contaminantSource.contaminants_db.fields.path}"
				#end if
			#end if
    
			
			#if $abundance_filters.abundance_filters_areApplied == "yes"
				#if $abundance_filters.min_sample_presence
					--min-sample-presence $abundance_filters.min_sample_presence
				#end if
				#if $abundance_filters.min_abundance
					--min-abundance $abundance_filters.min_abundance
				#end if
				#if $abundance_filters.nb_biggest_otu
					--nb-biggest-otu $abundance_filters.nb_biggest_otu
				#end if
			#end if

	</command>
	<inputs>
		<!-- Files -->
		<param format="fasta" name="input_fasta" type="data" label="Sequences file" help="The sequence file to filter (format: fasta)." />
		<param format="biom1" name="input_biom" type="data" label="Abundance file" help="The abundance file to filter (format: BIOM)." />
		
		<conditional name="abundance_filters">
			<param name="abundance_filters_areApplied" type="select" label=" *** THE FILTERS ON OTUS IN SAMPLES, OTUS SIZE and SEQUENCE PERCENTAGE" help="If you want to filter OTUs on their abundance and occurrence." >
				<option value="no">No filters</option>
				<option value="yes">Apply filters</option>
			</param>
			<when value="no"></when>
			<when value="yes">
				<param name="min_sample_presence" type="integer" optional="true" label="Minimum number of samples" size="5" help="Fill the field only if you want this treatment. Keep OTU present in at least this number of samples." />
				<param name="min_abundance" type="text" optional="true" label="Minimum proportion/number of sequences to keep OTU" size="5" help="Fill the field only if you want this treatment. Use decimal notation for proportion (example: 0.01 for keep OTU with at least 1% of all sequences) ; Use integer notation for number of sequence (example: 2 for keep OTU with at least 2 sequences, so remove single singleton)." />
				<param name="nb_biggest_otu" type="integer" optional="true" label="N biggest OTU" size="5" help="Fill the fields only if you want this treatment. Keep the N biggest OTU." /> 
			</when>
		</conditional>
		
		<conditional name="contaminations_filter">
			<param name="contaminations_filter_isApplied" type="select" label="Contaminant databank" help="Do you want to filtered out cluster sequence that correspond to a specific contaminant">
				<option value="no">No filters</option>
				<option value="yes">Apply filters</option>
			</param>
			<when value="no"></when>
			<when value="yes">
				<conditional name="contaminantSource">
					<param name="which_contaminantSource" type="select" label="Will you select a contaminant reference from your history or use one from the server?">
						<option value="server">Use one from the server</option>
						<option value="history">Use one from the history</option>
					</param>
					<when value="server">
						<param name="contaminants_db" type="select" label="Contaminant databank" help="For example the phiX databank (the phiX is a control added in Illumina sequencing technologies).">
							<options from_data_table="contaminant_db"></options>
							<validator type="no_options" message="A built-in database is not available" />
						</param>
					</when>
					<when value="history">
						<param name="ownContaminantFile" type="data" format="fasta" label="Select a contaminante reference from history" />
					</when>
				</conditional>
			</when>
		</conditional>
	</inputs>
	<outputs>
		<data format="fasta" name="output_fasta" label="${tool.name}: sequences.fasta" from_work_dir="sequences.fasta" />
		<data format="biom1" name="output_biom" label="${tool.name}: abundance.biom" from_work_dir="abundance.biom" />
		<data format="tabular" name="output_excluded" label="${tool.name}: excluded.tsv" from_work_dir="excluded.tsv" />
		<data format="html" name="output_summary" label="${tool.name}: report.html" from_work_dir="report.html" />
	</outputs>
	<tests>
		<test>
	        <param name="input_fasta" value="references/03-chimera.fasta" />
            <param name="input_biom" value="references/03-chimera.biom" />    
		    <conditional name="abundance_filters">
	     	  	<param name="abundance_filters_areApplied" value="yes" />
				<param name="min_abundance" value="0.00005" />	
				<param name="min_sample_presence" value="3" />
		    </conditional>
		    <conditional name="contaminations_filter">
	            <param name="contaminations_filter_isApplied" value="yes" />
	            <conditional name="contaminantSource">
	            	<param name="which_contaminantSource" value="server"/>
					<param name="contaminant_db" value="phiX_test" />
				</conditional>
		    </conditional>
	 	    <output name="output_fasta" file="references/04-filters.fasta" />
		    <output name="output_excluded" file="references/04-filters.excluded" />
	    </test>
	</tests>
	<help>

.. image:: static/images/FROGS_logo.png
   :height: 144
   :width: 110



.. class:: infomark page-header h2

What it does

Filter the OTUs of an abundance table according :

 -The abundance and the occurence of OTUs: presence in samples, OTU size and maximum number of OTUs.
 
 -Contamination: from the list of proposition (ex : phiX, a control added in Illumina sequencing technologies) or from your history (ex : a fasta file containing a list of contaminant of your choice).



.. class:: infomark page-header h2

Inputs/outputs


.. class:: h3

Inputs

**Sequence file**:

The sequences (format `FASTA &lt;https://en.wikipedia.org/wiki/FASTA_format&gt;`_).

**Abundance file**:

The abundance of each OTU in each sample (format `BIOM &lt;http://biom-format.org/&gt;`_).

** Contaminant fasta file** (optional):

A sequence fasta file containing the reference sequence of known contaminant

.. class:: h3

Outputs

**Sequence file** (sequences.fasta):

 The sequences after filtering (format `FASTA &lt;https://en.wikipedia.org/wiki/FASTA_format&gt;`_).

**Abundance file** (abundance.biom):

 The abundance after filtering (format `BIOM &lt;http://biom-format.org/&gt;`_).

**Excluded file** (excluded.txt):

 The list of the OTUs deleted by filters (format `TSV &lt;https://en.wikipedia.org/wiki/Tab-separated_values&gt;`_).

**Summary file** (report.html):

 The filters and the number of removed sequences (format `HTML &lt;https://en.wikipedia.org/wiki/HTML&gt;`_).



.. class:: infomark page-header h2

How it works




The OTUs kept are the ones that satisfy into the BIOM input file the thresholds specified by the user.

The BIOM abundance table and the fasta file are written again according to the OTUs kept.

The OTUs discarded are listed in the excluded file.

.. csv-table:: 
   :header: "Steps", "description"
   :widths: 5, 150
   :class: table table-striped

   "1", "Except the filter to select the n most abundant OTUs, all the selected filters are run independently. For each filters a list of the OTUs to remove is generated. Concerning contaminant research, OTU are added to the previous list if it aligns on a contaminant reference sequence with 80% identity and 80% coverage"
   "2", "All the OTUs tagged to remove by at least one filter are removed."
   "3", "If the filter to select the N most abundant OTUs is filled it is applied."



.. class:: infomark page-header h2

Advices

Please check that the input fasta file and the input BIOM file correspond to the same OTUs.

Examples for the filters on abundance and occurence of the OTUs : 

-To keep the filters that are present in 5 samples, fill the corresponding field with "5".

-To display the 20 biggest OTU, fill the corresponding field with "20".

-To filter on abundance, we advise you to specify 0.005%. It seems to be the optimal threshold (`Bokulich *et al*, 2013 &lt;http://www.nature.com/nmeth/journal/v10/n1/abs/nmeth.2276.html&gt;`_ ).


----

**Contact**

Contacts: frogs@inra.fr

Repository: https://github.com/geraldinepascal/FROGS
website: http://frogs.toulouse.inra.fr/

Please cite the **FROGS article**: *Escudie F., et al. Bioinformatics, 2018. FROGS: Find, Rapidly, OTUs with Galaxy Solution.*

	</help>
	<citations>
		<citation type="doi">10.1093/bioinformatics/btx791</citation>
	</citations>
</tool>
